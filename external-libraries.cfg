# This file is part of the dune-gdt-pymor-interaction project:
#   https://github.com/dune-community/dune-gdt-pymor-interaction
# Copyright holders: Felix Schindler
# License: BSD 2-Clause License (http://opensource.org/licenses/BSD-2-Clause)

# available constants:
# CC, CXX, F77, CXXFLAGS, BASEDIR, SRCDIR
# all commands are executed in $SRCDIR/$NAME

#[metis]
#src=http://ftp.mcs.anl.gov/pub/petsc/externalpackages/metis-5.1.0-p1.tar.gz
#build='make config shared=1 prefix=$BASEDIR/local'
#      'make'
#      'make install'

#[parmetis]
#src=http://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-4.0.3.tar.gz
#build='make config cc=/usr/bin/mpicc mpicc=/usr/bin/mpicc mpicxx=/usr/bin/mpicxx shared=1 prefix=$BASEDIR/local'
#      'make'
#      'make install'

# If you want alugrid to find your system metis and parmetis, add
#     --with-metis=/usr --with-parmetis=/usr
# to the configure call below. If you want it to find the locally built metis and parmetis from above, add:
#     --with-metis=$BASEDIR/local --with-parmetis=$BASEDIR/local
# Note that DUNE has to find alugrid, metis and parmetis, to actually _find_ alugrid.
[alugrid]
src=http://wwwmath.uni-muenster.de/num/ohlberger/research/software/ALUGrid-1.52.tar.gz
build='./configure --prefix=$BASEDIR/local CC=$CC CXX=$CXX F77=$F77 CXXFLAGS="-DDNDEBUG -DNDEBUG -std=c++11 -O2 -DDUNE_GRID_EXPERIMENTAL_GRID_EXTENSIONS=1 -w -fPIC"'
      'make'
      'make install'

#[eigen]
#src=http://bitbucket.org/eigen/eigen/get/3.2.4.tar.gz
#build='test -d build || mkdir build'
#      'rm -rf build/*'
#      'cd build && cmake .. -Wno-dev -DCMAKE_INSTALL_PREFIX=$BASEDIR/local -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=RELEASE'
#      'cd build && make'
#      'cd build && make install'

[virtualenv]
only_build=True
build='cd $BASEDIR && virtualenv --python=python3 local'
      '. $BASEDIR/local/bin/activate && for ii in common grid functions la; do echo "$BASEDIR/build/dune-xt-$ii" >> "$(python -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())')/dune-xt-$ii.pth"; done'
      '. $BASEDIR/local/bin/activate && pip install --upgrade pip'
      '. $BASEDIR/local/bin/activate && pip install --upgrade mpi4py || echo "\n\n    Installation of mpi4py failed, this usually happens due to missing MPI.\n    This is fine if you do not plan to use MPI.\n\n"'
      '. $BASEDIR/local/bin/activate && pip install --upgrade notebook'
      '. $BASEDIR/local/bin/activate && pip install pyparsing==2.0.6 # required for dune-python'
      '. $BASEDIR/local/bin/activate && echo "$BASEDIR/build/dune-gdt" >> "$(python -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())')/dune-gdt.pth"'

#[spe10model1]
#only_build=True
#build='test -d $BASEDIR/local/src/spe10/model1 || mkdir -p $BASEDIR/local/src/spe10/model1'
#      'cd $BASEDIR/local/src/spe10/model1 && [ ! -e perm_case1.zip ] && wget -nc http://wwwmath.uni-muenster.de/num/ohlberger/research/software/perm_case1.zip ; unzip -o perm_case1.zip'

#[boost]
#src=http://wwwmath.uni-muenster.de/num/ohlberger/research/software/boost-1.55.tar.bz2
#build='./bootstrap.sh --with-libraries=filesystem,system,thread,timer,chrono,date_time --prefix=$BASEDIR/local --with-toolset=${BOOST_TOOLSET}'
#      './b2 install'
